{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","console-mock-1.0.24.min.js","index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","consoleMock","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"create","nativeConsole","log","callNative","info","warn","error","time","timeEnd","table","trace","group","groupEnd","groupCollapsed","fn","name","isEnabled","apply","root","console","arguments","historyStorage","push","method","toArray","getSetEnabled","value","undefined","history","historyClear","slice","bind","_setNativeConsole","enabled"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,YAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,ICCA,SAAWM,GCIX,QAAAoB,KAIA,MAHA,gBAAAC,KACAA,OAGAC,IAAAC,EAAAF,EAAAC,IAAA,OACAE,KAAAD,EAAAF,EAAAG,KAAA,QACAC,KAAAF,EAAAF,EAAAI,KAAA,QACAC,MAAAH,EAAAF,EAAAK,MAAA,SACAC,KAAAJ,EAAAF,EAAAM,KAAA,QACAC,QAAAL,EAAAF,EAAAO,QAAA,WACAC,MAAAN,EAAAF,EAAAQ,MAAA,SACAC,MAAAP,EAAAF,EAAAS,MAAA,SACAC,MAAAR,EAAAF,EAAAU,MAAA,SACAC,SAAAT,EAAAF,EAAAW,SAAA,YACAC,eAAAV,EAAAF,EAAAY,eAAA,mBAIA,QAAAV,GAAAW,EAAAC,GACA,MAAA,YACA,kBAAAD,KACAE,GACAF,EAAAG,MAAAC,KAAAC,QAAAC,WAEAC,EAAAC,MACAC,OAAAR,EACAK,UAAAI,EAAAJ,eAMA,QAAAK,GAAAC,GACA,MAAAC,UAAAD,EACAV,GAEAA,EAAAU,EACA5C,MAIA,QAAA8C,KACA,MAAAP,GAGA,QAAAQ,KAEA,MADAR,MACAvC,KArDA,GAAAmB,GAAArB,EAAAuC,QACAH,GAAA,EACAK,KACAG,KAAAM,MAAAjC,KAAAkC,QAAAD,MAqDAvD,GAAAD,SACA0D,kBAAA,SAAAN,GAAAzB,EAAAyB,GAEA1B,OAAAA,EACAiC,QAAAR,EACAG,QAAAA,EACAC,aAAAA,KDKGhC,KAAKf,KAAuB,mBAAXF,QAAyBA,OAAyB,mBAATC,MAAuBA,KAAyB,mBAAXF,QAAyBA,qBAEhH,IAAI","file":"console-mock-1.0.24.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",null,"var nativeConsole = global.console;\nvar isEnabled = true;\nvar historyStorage = [];\nvar toArray = [].slice.call.bind([].slice);\n\nfunction create() {\n    if (typeof nativeConsole !== 'object') {\n        nativeConsole = {};\n    }\n    return {\n        log:            callNative(nativeConsole.log, 'log'),\n        info:           callNative(nativeConsole.info, 'info'),\n        warn:           callNative(nativeConsole.warn, 'warn'),\n        error:          callNative(nativeConsole.error, 'error'),\n        time:           callNative(nativeConsole.time, 'time'),\n        timeEnd:        callNative(nativeConsole.timeEnd, 'timeEnd'),\n        table:          callNative(nativeConsole.table, 'table'),\n        trace:          callNative(nativeConsole.trace, 'trace'),\n        group:          callNative(nativeConsole.group, 'group'),\n        groupEnd:       callNative(nativeConsole.groupEnd, 'groupEnd'),\n        groupCollapsed: callNative(nativeConsole.groupCollapsed, 'groupCollapsed')\n    };\n}\n\nfunction callNative(fn, name) {\n    return function () {\n        if (typeof fn === 'function') {\n            if (isEnabled) {\n                fn.apply(root.console, arguments);\n            }\n            historyStorage.push({\n                method: name,\n                arguments: toArray(arguments)\n            });\n        }\n    };\n}\n\nfunction getSetEnabled(value) {\n    if (value === undefined) {\n        return isEnabled;\n    } else {\n        isEnabled = value;\n        return this;\n    }\n}\n\nfunction history() {\n    return historyStorage;\n}\n\nfunction historyClear() {\n    historyStorage = [];\n    return this;\n}\n\nmodule.exports = {\n    _setNativeConsole: function (value) { nativeConsole = value },\n\n    create: create,\n    enabled: getSetEnabled,\n    history: history,\n    historyClear: historyClear\n};\n"],"sourceRoot":"/source/"}